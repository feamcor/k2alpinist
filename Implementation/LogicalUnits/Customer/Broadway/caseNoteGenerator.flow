{
    "levels": [
        {
            "stages": [
                {
                    "name": "Initialization",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Parent Row",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "case_id": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Total",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Count",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Parent Rows",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "case_id": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Adjust for Iteration",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Total++",
                            "minHeight": 197,
                            "actorType": {
                                "parentType": "MathAdd",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "const": 1
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Iteration",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Case ID",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Iterator",
                            "minHeight": 196,
                            "actorType": {
                                "parentType": "ForLoop",
                                "inputs": [
                                    {
                                        "name": "from",
                                        "const": 1
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Synthesize 1",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "UUID",
                            "minHeight": 357,
                            "actorType": {
                                "parentType": "RandomUUID",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Synthesize 2",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Cantor Pair",
                            "minHeight": 144,
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "((a+b)*(a+b+1))/2+b",
                                            "script": "(a + b) * (a + b + 1) / 2 + b;"
                                        }
                                    },
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Note Date",
                            "actorType": {
                                "parentType": "Now",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Note",
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "Note #${0}: ${1}"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build Note",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Generated Note",
                            "actorType": {
                                "parentType": "MapCreate",
                                "inputs": [
                                    {
                                        "name": "case_id",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "note_id",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "note_date",
                                        "schema": {
                                            "type": "date"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "note_text",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "map",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "case_id": {
                                                    "type": "integer"
                                                },
                                                "note_id": {
                                                    "type": "string"
                                                },
                                                "note_date": {
                                                    "type": "date"
                                                },
                                                "note_text": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Add Note",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Generated Notes",
                            "actorType": {
                                "parentType": "ArrayBuilder",
                                "inputs": [],
                                "outputs": [
                                    {
                                        "name": "array",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "case_id": {
                                                        "type": "integer"
                                                    },
                                                    "note_id": {
                                                        "type": "string"
                                                    },
                                                    "note_date": {
                                                        "type": "date"
                                                    },
                                                    "note_text": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Parent Row",
                "name": "value"
            },
            "rightPort": {
                "actor": "Case ID",
                "name": "value"
            },
            "path": [
                "case_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Total",
                "name": "value"
            },
            "rightPort": {
                "actor": "Total++",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Total++",
                "name": "result"
            },
            "rightPort": {
                "actor": "Iterator",
                "name": "to"
            }
        },
        {
            "leftPort": {
                "actor": "Case ID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Cantor Pair",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Case ID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Generated Note",
                "name": "case_id"
            }
        },
        {
            "leftPort": {
                "actor": "Iterator",
                "name": "i"
            },
            "rightPort": {
                "actor": "Note",
                "name": "params"
            },
            "iterate": "Iterate",
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "Iterator",
                "name": "i"
            },
            "rightPort": {
                "actor": "Cantor Pair",
                "name": "b"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "UUID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Note",
                "name": "params"
            },
            "arrayPosition": 1
        },
        {
            "leftPort": {
                "actor": "Cantor Pair",
                "name": "result"
            },
            "rightPort": {
                "actor": "Generated Note",
                "name": "note_id"
            }
        },
        {
            "leftPort": {
                "actor": "Note Date",
                "name": "date"
            },
            "rightPort": {
                "actor": "Generated Note",
                "name": "note_date"
            }
        },
        {
            "leftPort": {
                "actor": "Note",
                "name": "string"
            },
            "rightPort": {
                "actor": "Generated Note",
                "name": "note_text"
            }
        },
        {
            "leftPort": {
                "actor": "Generated Note",
                "name": "map"
            },
            "rightPort": {
                "actor": "Generated Notes",
                "name": "input"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "parent_row"
            },
            "rightPort": {
                "actor": "Parent Row",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "total"
            },
            "rightPort": {
                "actor": "Total",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "count"
            },
            "rightPort": {
                "actor": "Count",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "parent_rows"
            },
            "rightPort": {
                "actor": "Parent Rows",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "Generated Notes",
                "name": "array"
            },
            "rightPort": {
                "actor": "flowArgs",
                "name": "result"
            }
        }
    ]
}