{
    "levels": [
        {
            "stages": [
                {
                    "name": "Input Parameters",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "IID",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "GPT Model",
                            "minHeight": 134,
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "gpt-3.5-turbo-instruct",
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Max Tokens",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": 200,
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Temperature",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "number"
                                        },
                                        "const": 0,
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "number"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Customer Address",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Check IID",
                            "condition": "result",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "if (iid !== null && iid !== undefined && iid.trim() !== \"\") {\r\n    const parsed = parseInt(iid, 10);\r\n    !isNaN(parsed) && iid == parsed.toString();\r\n} else {\r\n    false;\r\n}\r\n",
                                            "script": "if (iid !== null && iid !== undefined && iid.trim() !== \"\") {\n  var parsed = parseInt(iid, 10);\n  !isNaN(parsed) && iid == parsed.toString();\n} else {\n  false;\n}"
                                        }
                                    },
                                    {
                                        "name": "iid",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Get LUI",
                            "actorType": {
                                "parentType": "FabricGet",
                                "inputs": [
                                    {
                                        "name": "luType",
                                        "const": "Customer"
                                    },
                                    {
                                        "name": "syncMode",
                                        "const": "ON"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Addresses",
                            "minHeight": 277,
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select ZIP, STREET_ADDRESS_1, CITY, STATE, COUNTRY from Customer.address"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ZIP": {
                                                        "type": "string"
                                                    },
                                                    "STREET_ADDRESS_1": {
                                                        "type": "string"
                                                    },
                                                    "CITY": {
                                                        "type": "string"
                                                    },
                                                    "STATE": {
                                                        "type": "string"
                                                    },
                                                    "COUNTRY": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build AI Prompt",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Prompt",
                            "minHeight": 492,
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "Return the string \"true\" if ${ZIP} is the zip code of the following address: street name \"${STREET_ADDRESS_1}\", city \"${CITY}\", state \"${STATE}\", and country \"${COUNTRY}\". Otherwise, return string \"false\"."
                                    },
                                    {
                                        "name": "ZIP",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "STREET_ADDRESS_1",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "CITY",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "STATE",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "COUNTRY",
                                        "schema": {},
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build API Payload",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Payload",
                            "minHeight": 257,
                            "actorType": {
                                "parentType": "MapCreate",
                                "inputs": [
                                    {
                                        "name": "model",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "max_tokens",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "temperature",
                                        "schema": {
                                            "type": "number"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "prompt",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "map",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "model": {
                                                    "type": "string"
                                                },
                                                "max_tokens": {
                                                    "type": "integer"
                                                },
                                                "temperature": {
                                                    "type": "integer"
                                                },
                                                "prompt": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Call AI API",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Call API",
                            "actorType": {
                                "parentType": "HttpJson",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "openai_completions"
                                    },
                                    {
                                        "name": "path",
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Parse API Result",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "API Result",
                            "minHeight": 109,
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "response === \"true\""
                                    },
                                    {
                                        "name": "response",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Rollback Sync",
                    "dependsOnList": [],
                    "isLast": 1,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Is Not Valid Zip",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Not",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Rollback",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "rollback"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Stop",
                            "actorType": {
                                "parentType": "LoopStop",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "End Flow",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "IID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Check IID",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "IID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Get LUI",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "GPT Model",
                "name": "value"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "model"
            }
        },
        {
            "leftPort": {
                "actor": "Max Tokens",
                "name": "value"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "max_tokens"
            }
        },
        {
            "leftPort": {
                "actor": "Temperature",
                "name": "value"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "temperature"
            }
        },
        {
            "leftPort": {
                "actor": "Get Addresses",
                "name": "result"
            },
            "rightPort": {
                "actor": "Prompt",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Prompt",
                "name": "string"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "prompt"
            }
        },
        {
            "leftPort": {
                "actor": "Payload",
                "name": "map"
            },
            "rightPort": {
                "actor": "Call API",
                "name": "payload"
            }
        },
        {
            "leftPort": {
                "actor": "API Result",
                "name": "result"
            },
            "rightPort": {
                "actor": "Is Not Valid Zip",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "iid"
            },
            "rightPort": {
                "actor": "IID",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "api_gpt_model"
            },
            "rightPort": {
                "actor": "GPT Model",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "api_max_tokens"
            },
            "rightPort": {
                "actor": "Max Tokens",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "api_temperature"
            },
            "rightPort": {
                "actor": "Temperature",
                "name": "value"
            }
        }
    ]
}