{
    "levels": [
        {
            "stages": [
                {
                    "name": "Input Parameters",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "IID",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "GPT Model",
                            "minHeight": 134,
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "gpt-4-turbo",
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Max Tokens",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": 200,
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Sync Mode",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "ON",
                                        "isDefault": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Customer",
                    "dependsOnList": [
                        "Input Parameters"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Check IID",
                            "condition": "result",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "if (iid !== null && iid !== undefined && iid.trim() !== \"\") {\r\n    const parsed = parseInt(iid, 10);\r\n    !isNaN(parsed) && iid == parsed.toString();\r\n} else {\r\n    false;\r\n}\r\n",
                                            "script": "if (iid !== null && iid !== undefined && iid.trim() !== \"\") {\n  var parsed = parseInt(iid, 10);\n  !isNaN(parsed) && iid == parsed.toString();\n} else {\n  false;\n}"
                                        }
                                    },
                                    {
                                        "name": "iid",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Begin Sync Trx",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "begin"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "LUI",
                            "minHeight": 201,
                            "actorType": {
                                "parentType": "FabricGet",
                                "inputs": [
                                    {
                                        "name": "luType",
                                        "const": "Customer"
                                    },
                                    {
                                        "name": "syncMode",
                                        "const": null
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Invalid IID",
                    "dependsOnList": [
                        "Input Parameters"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Addresses",
                    "dependsOnList": [
                        "Get Customer"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "LUI Was Synchronized",
                            "condition": "result",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "action !== null && action !== undefined && action.trim() !== \"\" && (action === \"ADD\" || action === \"UPDATE\");"
                                    },
                                    {
                                        "name": "action",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Addresses",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select ZIP, STREET_ADDRESS_1, CITY, STATE, COUNTRY from Customer.address"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ZIP": {
                                                        "type": "string"
                                                    },
                                                    "STREET_ADDRESS_1": {
                                                        "type": "string"
                                                    },
                                                    "CITY": {
                                                        "type": "string"
                                                    },
                                                    "STATE": {
                                                        "type": "string"
                                                    },
                                                    "COUNTRY": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized",
                    "dependsOnList": [
                        "Get Customer"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Rollback Sync Trx 2",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "rollback"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Invalid IID 1",
                    "dependsOnList": [
                        "Invalid IID"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build Prompt",
                    "dependsOnList": [
                        "Get Addresses"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Prompt",
                            "minHeight": 407,
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "What is the zip code of the address '${STREET_ADDRESS_1}, ${CITY}, ${STATE}, ${COUNTRY}'. Reply only with the zip code number, nothing else."
                                    },
                                    {
                                        "name": "STREET_ADDRESS_1",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "CITY",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "STATE",
                                        "schema": {},
                                        "mandatory": false
                                    },
                                    {
                                        "name": "COUNTRY",
                                        "schema": {},
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 1",
                    "dependsOnList": [
                        "LUI Not Synchronized"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 2",
                    "dependsOnList": [
                        "Invalid IID 1"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build Messages",
                    "dependsOnList": [
                        "Build Prompt"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "System Message",
                            "minHeight": 252,
                            "actorType": {
                                "parentType": "MapCreate",
                                "inputs": [
                                    {
                                        "const": "system",
                                        "name": "role",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "const": "You are an assistant expert on addresses.",
                                        "name": "content",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "map",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "type": "string"
                                                },
                                                "content": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "User Message",
                            "actorType": {
                                "parentType": "MapCreate",
                                "inputs": [
                                    {
                                        "const": "user",
                                        "name": "role",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "content",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "map",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "type": "string"
                                                },
                                                "content": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 2",
                    "dependsOnList": [
                        "LUI Not Synchronized 1"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 3",
                    "dependsOnList": [
                        "Invalid IID 2"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build Payload",
                    "dependsOnList": [
                        "Build Messages"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Payload",
                            "minHeight": 238,
                            "actorType": {
                                "parentType": "MapCreate",
                                "inputs": [
                                    {
                                        "name": "model",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "max_tokens",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "const": 0,
                                        "name": "temperature",
                                        "schema": {
                                            "type": "number"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "messages",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "const": 1,
                                        "name": "n",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "const": {
                                            "type": "text"
                                        },
                                        "name": "response_format",
                                        "schema": {
                                            "type": "object"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "map",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "temperature": {
                                                    "type": "integer"
                                                },
                                                "n": {
                                                    "type": "integer"
                                                },
                                                "response_format": {
                                                    "type": "string"
                                                },
                                                "model": {
                                                    "type": "string"
                                                },
                                                "max_tokens": {
                                                    "type": "integer"
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "role": {
                                                                "type": "string"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 3",
                    "dependsOnList": [
                        "LUI Not Synchronized 2"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 4",
                    "dependsOnList": [
                        "Invalid IID 3"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Call API",
                    "dependsOnList": [
                        "Build Payload"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "API",
                            "minHeight": 193,
                            "actorType": {
                                "parentType": "HttpJson",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "openai_completions"
                                    },
                                    {
                                        "name": "path",
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "header",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "alt-svc": {
                                                    "type": "string"
                                                },
                                                "cf-cache-status": {
                                                    "type": "string"
                                                },
                                                "cf-ray": {
                                                    "type": "string"
                                                },
                                                "connection": {
                                                    "type": "string"
                                                },
                                                "content-type": {
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "type": "date"
                                                },
                                                "openai-organization": {
                                                    "type": "string"
                                                },
                                                "openai-processing-ms": {
                                                    "type": "string"
                                                },
                                                "openai-version": {
                                                    "type": "string"
                                                },
                                                "server": {
                                                    "type": "string"
                                                },
                                                "set-cookie": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "strict-transport-security": {
                                                    "type": "string"
                                                },
                                                "transfer-encoding": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-limit-requests": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-limit-tokens": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-remaining-requests": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-remaining-tokens": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-reset-requests": {
                                                    "type": "string"
                                                },
                                                "x-ratelimit-reset-tokens": {
                                                    "type": "string"
                                                },
                                                "x-request-id": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "object": {
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "type": "integer"
                                                },
                                                "model": {
                                                    "type": "string"
                                                },
                                                "choices": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "index": {
                                                                "type": "integer"
                                                            },
                                                            "message": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "role": {
                                                                        "type": "string"
                                                                    },
                                                                    "content": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "logprobs": {},
                                                            "finish_reason": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "usage": {
                                                    "type": "object",
                                                    "properties": {
                                                        "prompt_tokens": {
                                                            "type": "integer"
                                                        },
                                                        "completion_tokens": {
                                                            "type": "integer"
                                                        },
                                                        "total_tokens": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                },
                                                "system_fingerprint": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 4",
                    "dependsOnList": [
                        "LUI Not Synchronized 3"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 5",
                    "dependsOnList": [
                        "Invalid IID 4"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Parse Result",
                    "dependsOnList": [
                        "Call API"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Result",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "content.trim() === ZIP.trim()"
                                    },
                                    {
                                        "name": "ZIP",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "content",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 5",
                    "dependsOnList": [
                        "LUI Not Synchronized 4"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 6",
                    "dependsOnList": [
                        "Invalid IID 5"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Rollback Sync",
                    "dependsOnList": [
                        "Parse Result"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Is Not Valid Zip",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Not",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Rollback Sync Trx 1",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "rollback"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Stop Loop",
                            "actorType": {
                                "parentType": "LoopStop",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 6",
                    "dependsOnList": [
                        "LUI Not Synchronized 5"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 7",
                    "dependsOnList": [
                        "Invalid IID 6"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Commit Sync",
                    "dependsOnList": [
                        "Rollback Sync"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "All Zips Were Valid",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Not",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": true,
                                        "isDefault": true
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Commit Sync Trx",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "commit"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "LUI Not Synchronized 7",
                    "dependsOnList": [
                        "LUI Not Synchronized 6"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                },
                {
                    "name": "Invalid IID 8",
                    "dependsOnList": [
                        "Invalid IID 7"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "IID",
                "name": "value"
            },
            "rightPort": {
                "actor": "Check IID",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "IID",
                "name": "value"
            },
            "rightPort": {
                "actor": "LUI",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "GPT Model",
                "name": "value"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "model"
            }
        },
        {
            "leftPort": {
                "actor": "Max Tokens",
                "name": "value"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "max_tokens"
            }
        },
        {
            "leftPort": {
                "actor": "Sync Mode",
                "name": "value"
            },
            "rightPort": {
                "actor": "LUI",
                "name": "syncMode"
            }
        },
        {
            "leftPort": {
                "actor": "LUI",
                "name": "result"
            },
            "rightPort": {
                "actor": "LUI Was Synchronized",
                "name": "action"
            },
            "iterate": "First",
            "path": [
                "action"
            ]
        },
        {
            "leftPort": {
                "actor": "Addresses",
                "name": "result"
            },
            "rightPort": {
                "actor": "Prompt",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Addresses",
                "name": "result"
            },
            "rightPort": {
                "actor": "Result",
                "name": "ZIP"
            },
            "iterate": "Iterate",
            "path": [
                "ZIP"
            ]
        },
        {
            "leftPort": {
                "actor": "Prompt",
                "name": "string"
            },
            "rightPort": {
                "actor": "User Message",
                "name": "content"
            }
        },
        {
            "leftPort": {
                "actor": "System Message",
                "name": "map"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "messages"
            },
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "User Message",
                "name": "map"
            },
            "rightPort": {
                "actor": "Payload",
                "name": "messages"
            },
            "arrayPosition": 1
        },
        {
            "leftPort": {
                "actor": "Payload",
                "name": "map"
            },
            "rightPort": {
                "actor": "API",
                "name": "payload"
            }
        },
        {
            "leftPort": {
                "actor": "API",
                "name": "result"
            },
            "rightPort": {
                "actor": "Result",
                "name": "content"
            },
            "iterate": "First",
            "path": [
                "choices",
                "message",
                "content"
            ]
        },
        {
            "leftPort": {
                "actor": "Result",
                "name": "result"
            },
            "rightPort": {
                "actor": "Is Not Valid Zip",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "Is Not Valid Zip",
                "name": "result"
            },
            "rightPort": {
                "actor": "All Zips Were Valid",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "iid"
            },
            "rightPort": {
                "actor": "IID",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "api_gpt_model"
            },
            "rightPort": {
                "actor": "GPT Model",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "api_max_tokens"
            },
            "rightPort": {
                "actor": "Max Tokens",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "lui_sync_mode"
            },
            "rightPort": {
                "actor": "Sync Mode",
                "name": "value"
            }
        }
    ]
}